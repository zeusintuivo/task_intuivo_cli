#!/usr/bin/bash

_debian_flavor_install() {
  enforce_variable_with_value USER_HOME "${USER_HOME}"
  if (
  install_requirements "linux" "
    base64
    unzip
    curl
    wget
  "
  ); then
    {
      apt install base64 -y
      apt install unzip -y
    }
  fi
  verify_is_installed "
    unzip
    curl
    wget
    tar
  "
  local PB_VERSION=0.16.7
  local CODENAME="pocketbase_${PB_VERSION}_linux_amd64.zip"
  local TARGET_URL="https://github.com/pocketbase/pocketbase/releases/download/v${PB_VERSION}/${CODENAME}"
  local DOWNLOADFOLDER="$(_find_downloads_folder)"
  enforce_variable_with_value DOWNLOADFOLDER "${DOWNLOADFOLDER}"
  directory_exists_with_spaces "${DOWNLOADFOLDER}"
  cd "${DOWNLOADFOLDER}"
  _do_not_downloadtwice "${TARGET_URL}" "${DOWNLOADFOLDER}"  "${CODENAME}"
  # unzip "${DOWNLOADFOLDER}/${CODENAME}" -d $HOME/pb/
  local UNZIPDIR="${USER_HOME}/_/software"
  mkdir -p "${UNZIPDIR}"
  _unzip "${DOWNLOADFOLDER}" "${UNZIPDIR}" "${CODENAME}"
  local PATHTOPOCKETBASE="${UNZIPDIR}/pocketbase"
  local THISIP=$(myip)

} # end _debian_flavor_install

_redhat_flavor_install() {
  enforce_variable_with_value USER_HOME "${USER_HOME}"
  echo "REF: https://fedoraproject.org/wiki/I3_guide#First_Login"
	echo "REF: https://fedoramagazine.org/getting-started-i3-window-manager/"
  dnf builddep i3 -y --allowerasing
	dnf builddep kitty -y --allowerasing
	if (
  install_requirements "linux" "
    bzip2-devel
		libzip-devel
    bzip2-libs
    bzip2
    lbzip2
    pbzip2
    rust-zip+bzip2-devel
    rust-bzip2-devel
    bzip2
		yakuake
    i3 
		i3status 
		i3lock 
		dmenu 
    i3lock
    feh
    conky
		dunst
		flameshot
		rofi
		kitty
		audacious
		mpc
		mpv
		xset
		# moc
		xbacklight
		terminator
		rhythmbox
		totem
		thunar
		tmux
		py3status
		# until now no issues with boot or breaking gnome brightness
		xrandr
		arandr
    brightnessctl
		htop
		polybar
		python-mpd2
  "
  ); then
    {
      echo "All installed no error"
		}
		else
		{
			echo "something failed while installing err:$?"
    }
  fi
  su - "${SUDO_USER}" -c 'brew install libxscrnsaver libnotify bzip2 freetype2'

	su - $SUDO_USER -c 'brew install the_platinum_searcher'
	su - $SUDO_USER -c 'pip3 install python-mpd'
	su - $SUDO_USER -c 'pip install python-mpd'
  verify_is_installed "
    unzip
    curl
    wget
    tar
		xset
  "
  echo "End of install tasks should be installed. I don't know what to do next... "
} # end _redhat_flavor_install

_arch_flavor_install() {
  echo "_arch_flavor_install Procedure not yet implemented. I don't know what to do."
} # end _readhat_flavor_install

_arch__32() {
  _arch_flavor_install
} # end _arch__32

_arch__64() {
  _arch_flavor_install
} # end _arch__64

_centos__32() {
  _redhat_flavor_install
} # end _centos__32

_centos__64() {
  _redhat_flavor_install
} # end _centos__64

_debian__32() {
  _debian_flavor_install
} # end _debian__32

_debian__64() {
  _debian_flavor_install
} # end _debian__64

_fedora__32() {
  _redhat_flavor_install
} # end _fedora__32

_fedora__64() {
  _redhat_flavor_install
} # end _fedora__64

_gentoo__32() {
  _redhat_flavor_install
} # end _gentoo__32

_gentoo__64() {
  _redhat_flavor_install
} # end _gentoo__64

_madriva__32() {
  _redhat_flavor_install
} # end _madriva__32

_madriva__64() {
  _redhat_flavor_install
} # end _madriva__64

_suse__32() {
  _redhat_flavor_install
} # end _suse__32

_suse__64() {
  _redhat_flavor_install
} # end _suse__64

_ubuntu__32() {
  _debian_flavor_install
} # end _ubuntu__32

_ubuntu__64() {
  _debian_flavor_install
} # end _ubuntu__64

_darwin__64() {
  echo "_darwin__64 Procedure not yet implemented. I don't know what to do."
} # end _darwin__64

_darwin__arm64() {
  echo "_darwin__arm64 Procedure not yet implemented. I don't know what to do."
} # end _darwin__arm64

_tar() {
  echo "_tar Procedure not yet implemented. I don't know what to do."
} # end tar

_windows__64() {
  echo "_windows__64 Procedure not yet implemented. I don't know what to do."
} # end _windows__64

_windows__32() {
  echo "_windows__32 Procedure not yet implemented. I don't know what to do."
} # end _windows__32
