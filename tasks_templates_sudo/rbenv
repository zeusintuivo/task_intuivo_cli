#!/usr/bin/env bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
_git_clone() {
  local _source="${1}"
  local _target="${2}"
  if  it_exists_with_spaces "${_target}" ; then
  {
    cd "${_target}"
    git config pull.rebase false
    git fetch
    git pull
  }
  else
  {
   git clone "${_source}" "${_target}"
  }
  fi
  chown -R "${SUDO_USER}" "${_target}"

} # _git_clone

_add_variables_to_bashrc_zshrc(){
  local RBENV_SH_CONTENT='

# RBENV
export RBENV_ROOT="'${USER_HOME}'/.rbenv"
export PATH="'${USER_HOME}'/.rbenv/bin:${PATH}"
eval "$(rbenv init -)"
eval "$(rbenv virtualenv-init -)"

' 
  trap 'echo -e "${RED}" && echo "ERROR failed $0:$LINENO _add_variables_to_bashrc_zshrc rbenv" && echo -e "${RESET}" && return 0' ERR
  echo "${RBENV_SH_CONTENT}"
  local INITFILE INITFILES="
   .bashrc
   .zshrc
   .bash_profile
   .profile
   .zshenv
   .zprofile
  "
  while read INITFILE; do
  { 
    _if_not_contains "${USER_HOME}/${INITFILE}"  "# RBENV" ||  echo "${RBENV_SH_CONTENT}" >> "${USER_HOME}/${INITFILE}"
    _if_not_contains "${USER_HOME}/${INITFILE}"  "RBENV_ROOT" ||  echo "${RBENV_SH_CONTENT}" >> "${USER_HOME}/${INITFILE}"
    _if_not_contains "${USER_HOME}/${INITFILE}"  "rbenv init" ||  echo "${RBENV_SH_CONTENT}" >> "${USER_HOME}/${INITFILE}"
  }
  done <<< "${INITFILES}"
  # type rbenv
  export PATH="${USER_HOME}/.rbenv/bin:${PATH}"
  cd "${USER_HOME}/.rbenv/bin"
  eval "$(rbenv init -)"

  rbenv doctor
  rbenv install -l
  rbenv install 2.6.5
  rbenv global 2.6.5
  rbenv rehash
  ruby -v

} # _add_variables_to_bashrc_zshrc

_debian_flavor_install() {
  apt update -y
  install_requirements "linux" "
    # Batch 1 18.04
    autoconf
    bison
    build-essential
    libssl-dev
    libyaml-dev
    libreadline6-dev
    zlib1g-dev
    libncurses5-dev
    libffi-dev
    libgdbm5
    libgdbm-dev
  "
  install_requirements "linux" "
    # Batch 2 20.04
    autoconf
    bison
    build-essential
    libssl-dev
    libyaml-dev
    libreadline6-dev
    zlib1g-dev
    libncurses5-dev
    libffi-dev
    libgdbm6
    libgdbm-dev
  "
  _git_clone "https://github.com/rbenv/rbenv.git" "${USER_HOME}/.rbenv"
  _git_clone "https://github.com/rbenv/ruby-build.git" "${USER_HOME}/.rbenv/plugins/ruby-build"
  local MSG=$(_add_variables_to_bashrc_zshrc)
  echo "${MSG}"
} # end _debian_flavor_install

_redhat_flavor_install() {
  dnf build-dep rbenv -vy
  _git_clone "https://github.com/rbenv/rbenv.git" "${USER_HOME}/.rbenv"
  _git_clone "https://github.com/rbenv/ruby-build.git" "${USER_HOME}/.rbenv/plugins/ruby-build"
  _add_variables_to_bashrc_zshrc
  rbenv install -l
  rbenv install 2.6.5
  rbenv global 2.6.5
  rbenv rehash
  ruby -v
} # end _redhat_flavor_install

_arch_flavor_install() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _readhat_flavor_install

_arch__32() {
  _arch_flavor_install
} # end _arch__32

_arch__64() {
  _arch_flavor_install
} # end _arch__64

_centos__32() {
  _redhat_flavor_install
} # end _centos__32

_centos__64() {
  _redhat_flavor_install
} # end _centos__64

_debian__32() {
  _debian_flavor_install
} # end _debian__32

_debian__64() {
  _debian_flavor_install
} # end _debian__64

_fedora__32() {
  _redhat_flavor_install
} # end _fedora__32

_fedora__64() {
  _redhat_flavor_install
} # end _fedora__64

_gentoo__32() {
  _redhat_flavor_install
} # end _gentoo__32

_gentoo__64() {
  _redhat_flavor_install
} # end _gentoo__64

_madriva__32() {
  _redhat_flavor_install
} # end _madriva__32

_madriva__64() {
  _redhat_flavor_install
} # end _madriva__64

_suse__32() {
  _redhat_flavor_install
} # end _suse__32

_suse__64() {
  _redhat_flavor_install
} # end _suse__64

_ubuntu__32() {
  _debian_flavor_install
} # end _ubuntu__32

_ubuntu__64() {
  _debian_flavor_install
} # end _ubuntu__64

_darwin__64() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _darwin__64

_tar() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end tar

_windows__64() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _windows__64

_windows__32() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _windows__32
