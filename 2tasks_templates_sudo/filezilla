

#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#

#
_download_page(){
  # Samople use :
  #
  #   _download_page   https://filezilla-project.org/download.php?platform=linux64
  #
  local target_url="${1}"
  local CODEFILE=""
  local _WGETCURLMAND=""
  local _WGETCURLusing=""
  local -i _err=0
  enforce_variable_with_value target_url "${target_url}"
  if ( command -v curl >/dev/null 2>&1; )  ; then
    _WGETCURLMAND="curl \"${target_url}\" -so -"
    _WGETCURLusing='curl'
  elif ( command -v wget >/dev/null 2>&1; ) ; then
    _WGETCURLMAND="wget --quiet --no-check-certificate  \"${target_url}\"-O -"
    _WGETCURLusing='wget'
  else
    echo -e "\n \n  ${RED}ERROR! ${YELLOW}Loading ${target_url} could not find wget or curl to download  \n \n "
    return 1
  fi
  echo -e "${YELLOW} +${ORANGE}-- ${CYAN}Loading ${target_url} from the net using ${RED}${_WGETCURLusing}"
  echo -e "${YELLOW} +${ORANGE}-- ${CYAN}${_WGETCURLMAND}  "
  CODEFILE="""$(eval ${_WGETCURLMAND}   2>/dev/null )"""  #  2>/dev/null suppress only curl download messages, but keep curl output for variable
  _err=$?
  [ $_err -gt 0 ] &&  echo -e "\n \n  ${RED}ERROR! ${YELLOW}Loading ${target_url}. running ${PURPLE}'${RED}${_WGETCURLusing}${PURPLE}'${YELLOW} returned error did not download or is empty err:$_err  \n \n  " && return $_err
  echo -e "${CODEFILE}"
  return $_err
} # end _download_page

_dowload_link(){
  # Usage:
  #
  #
  #  local _filezilla_download_url=$(_dowload_link win64)
  #  enforce_variable_with_value _filezilla_download_url  "${_filezilla_download_url}"

  local PLATFORM="${1}"
  #                    param order varname    varvalue      validoptions
  enforce_parameter_with_options 2 PLATFORM "${PLATFORM}" "osx win64 win32 linux64 linux32"
  local _downloadurl="https://filezilla-project.org/download.php?platform=${PLATFORM}"
  echo -e "${_downloadurl}"
  return 0
}
_version() {
  # Usage:
  #
  #    local _filezilla_version=$(_version)
  #    enforce_variable_with_value _filezilla_version  "${_filezilla_version}"
  #
  local url="https://filezilla-project.org/download.php"
  enforce_variable_with_value url  "${url}"

  local CODEFILE="$(_download_page "${url}"  2>&1;)" # suppress only wget download messages, but keep wget output for variable
  enforce_variable_with_value CODEFILE  "${CODEFILE}"
  echo "${CODEFILE}"

  local _filezilla_version=$(echo "${CODEFILE}" | sed s/\</\\n\</g | grep "The latest stable version of FileZilla Client is" | sed s/\"/\\n/g | sed 's/ /\n/g' | tail -1)
  # enforce_variable_with_value _filezilla_version  "${_filezilla_version}"

  echo "${_filezilla_version}"
  unset url
  unset CODEFILE
  unset _filezilla_version
  return 0
} # end _version

_version_test(){
  local CODENAME="$(_version )"
  echo "${CODENAME}"
}


_debian_flavor_install() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _debian_flavor_install

_redhat_flavor_install() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _redhat_flavor_install

_redhat_flavor_install_64() {
  enforce_web_is_reachable  "filezilla-project.org"
  #
  local _filezilla_version=$(_version)
  echo  "${_filezilla_version}"
  enforce_variable_with_value _filezilla_version  "${_filezilla_version}"

  local _filezilla_download_url=$(_dowload_link win64)
  enforce_variable_with_value _filezilla_download_url  "${_filezilla_download_url}"

  local CODENAME=$(basename "${_filezilla_download_url}")
  enforce_variable_with_value CODENAME "${CODENAME}"
  local DOWNLOADFOLDER="$(_find_downloads_folder)"
  enforce_variable_with_value DOWNLOADFOLDER "${DOWNLOADFOLDER}"
  echo "${DOWNLOADFOLDER}"
  # _do_not_downloadtwice "${_filezilla_download_url}" "${DOWNLOADFOLDER}"  "${CODENAME}"
  # _install_rpm "${_filezilla_download_url}" "${DOWNLOADFOLDER}"  "${CODENAME}" 0
  local _err=$?
  # _remove_downloaded_codename_or_err  $_err "${DOWNLOADFOLDER}/${CODENAME}"
  # _err=$?
  # return  $_err
} # end _redhat_flavor_install_64

_arch_flavor_install() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _readhat_flavor_install

_arch_flavor_install() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _readhat_flavor_install

_arch__32() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _arch__32

_arch__64() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _arch__64

_centos__32() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _centos__32

_centos__64() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _centos__64

_debian__32() {
  _debian_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _debian__32

_debian__64() {
  _debian_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _debian__64

_fedora__32() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _fedora__32

_fedora__64() {
  _redhat_flavor_install_64
} # end _fedora__64

_gentoo__32() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _gentoo__32

_gentoo__64() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _gentoo__64

_madriva__32() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _madriva__32

_madriva__64() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _madriva__64

_suse__32() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _suse__32

_suse__64() {
  _redhat_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _suse__64

_ubuntu__32() {
  _debian_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _ubuntu__32

_ubuntu__64() {
  _debian_flavor_install
  echo "Procedure not yet implemented. I don't know what to do."
} # end _ubuntu__64

_darwin__64() {
  echo "Procedure not yet implemented. I don't know what to do."
} # end _darwin__64
