#!/bin/bash

_install_and_add_variables_to_bashrc_zshrc(){
  trap 'echo -e "${RED}" && echo "ERROR failed $0:$LINENO _install_and_add_variables_to_bashrc_zshrc kiex" && echo -e "${RESET}" && return 0' ERR

  local dir DIRS="erlang_tars erlang_versions kiex_config scripts"
  local KIEX_HOME="${USER_HOME}/.kiex"
  # For each dir, check whether it's already exists or not
  for dir in $DIRS ; do
  {
    if [[ ! -d "$KIEX_HOME/$dir" ]] ; then
    {
      mkdir -p "$KIEX_HOME/$dir"
      echo "$KIEX_HOME/$dir successfully created"
    }
    else
    {
      echo "$KIEX_HOME/$dir already exists and will not be replaced"
    }
    fi
  }
  done
  # Create the config file
  if [[ ! -f "$KIEX_HOME/kiex_config/erlang_default" ]] ; then
  {
    touch "$KIEX_HOME/kiex_config/erlang_default"
    echo "$KIEX_HOME/kiex_config/erlang_default succesfully created"
  }
  else
  {
    echo "$KIEX_HOME/kiex_config/erlang_default already exists and will not be replaced"
  }
  fi

  local KIEX_SH_CONTENT='


# KIEX
if [[ -e "'${USER_HOME}'/.kiex" ]] ; then
{
  test -s "'${USER_HOME}'/.kiex/scripts/kiex" && source "'${USER_HOME}'/.kiex/scripts/kiex"
}
fi
'
  echo "${KIEX_SH_CONTENT}"
  local INITFILE INITFILES="
   .bashrc
   .zshrc
   .bash_profile
   .profile
   .zshenv
   .zprofile
  "
  while read INITFILE; do
  {
    [ -z ${INITFILE} ] && continue
    _if_not_contains "${USER_HOME}/${INITFILE}"  "# KIEX" ||  echo "${KIEX_SH_CONTENT}" >> "${USER_HOME}/${INITFILE}"
    _if_not_contains "${USER_HOME}/${INITFILE}"  "kiex/scripts" ||  echo "${KIEX_SH_CONTENT}" >> "${USER_HOME}/${INITFILE}"
  }
  done <<< "${INITFILES}"
  # type kiex
  test -s "'${USER_HOME}'/.kiex/scripts/kiex" && source "${USER_HOME}/.kiex/scripts/kiex"
  _finale_message

} # _add_variables_to_bashrc_zshrc

_finale_message(){
  echo
  echo "
   ___________        .__   <>           <>
   \_   _____/_______ |  |  ___ __    __ __. _______
    |    __)_ \_  __ \|  |  \ | \ \  / / \ | \\\_  __ \\
    |        \ |  | \/|  |__| |  \_|/_/  | |  |  | \\/
   /_______  / |__|   |____/|_|  / /\ \  |_|  |__|
           \/                   /_/  \_\


   ____   ____                     .__
   \   \ /   / ____ _______  ______|__|  ____    ____
    \   Y   /_/ __ \\\\_  __ \/  ___/|  | /  _ \\  /    \\
     \     / \  ___/ |  | \/\___ \ |  |(  <_> )|   |  \\
      \___/   \___  >|__|  /____  >|__| \____/ |___|  /
                  \/            \/                  \/
      _____
     /     \  _____     ____  _____     ____    ____ _______
    /  \ /  \ \__  \   /    \ \__  \   / ___\ _/ __ \\\\_  __ \\
   /    Y    \ / __ \_|   |  \ / __ \_/ /_/  >\  ___/ |  | \/
   \____|__  /(____  /|___|  /(____  /\___  /  \___  >|__|
           \/      \/      \/      \//_____/       \/
  "
} # end _finale_message

_debian_flavor_install() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  curl -Lqs https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
  _git_clone "https://github.com/taylor/kiex.git" "${USER_HOME}/.kiex"
  local MSG=$(_install_and_add_variables_to_bashrc_zshrc)
  echo "${MSG}"
} # end _debian_flavor_install

_redhat_flavor_install() {
	trap 'echo -e "${RED}" && echo "ERROR failed $0:$LINENO _redhat_flavor_install() Cloning failed kiex" && echo -e "${RESET}" ' ERR
  curl -Lqs https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _git_clone "https://github.com/taylor/kiex.git" "${USER_HOME}/.kiex"
  local MSG=$(_install_and_add_variables_to_bashrc_zshrc)
  echo "${MSG}"
} # end _redhat_flavor_install

_arch_flavor_install() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  curl -Lqs https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
  _git_clone "https://github.com/taylor/kiex.git" "${USER_HOME}/.kiex"
  local MSG=$(_install_and_add_variables_to_bashrc_zshrc)
  echo "${MSG}"
} # end _readhat_flavor_install

_arch__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _arch_flavor_install
} # end _arch__32

_arch__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _arch_flavor_install
} # end _arch__64

_centos__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _centos__32

_centos__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _centos__64

_debian__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _debian_flavor_install
} # end _debian__32

_debian__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _debian_flavor_install
} # end _debian__64

_fedora__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _fedora__32

_fedora__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _fedora__64

_gentoo__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _gentoo__32

_gentoo__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _gentoo__64

_madriva__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _madriva__32

_madriva__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _madriva__64

_suse__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _suse__32

_suse__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _redhat_flavor_install
} # end _suse__64

_ubuntu__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _debian_flavor_install
} # end _ubuntu__32

_ubuntu__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _debian_flavor_install
} # end _ubuntu__64

_darwin__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  curl -Lqs https://raw.githubusercontent.com/taylor/kiex/master/install | bash -s
  export HOMEBREW_NO_AUTO_UPDATE=1
  trap 'echo -e "${RED}" && echo "ERROR err:$_err failed $0:$LINENO _darwin__64 kiex" && echo -e "${RESET}" && return 0' ERR
  local package packages="
    wget
    openssl
    wxWidgets
    fop
    libxslt
  "
  _package_list_installer "${packages}"
  _git_clone "https://github.com/taylor/kiex.git" "${USER_HOME}/.kiex"
  local MSG=$(_install_and_add_variables_to_bashrc_zshrc)
  echo "${MSG}"
} # end _darwin__64

_darwin__arm64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  _darwin__64
} # end _darwin__arm64

_tar() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  echo "Procedure not yet implemented. I don't know what to do."
} # end tar

_windows__64() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  echo "Procedure not yet implemented. I don't know what to do."
} # end _windows__64

_windows__32() {
  trap  '_trap_on_error $0 "${?}" LINENO BASH_LINENO FUNCNAME BASH_COMMAND $FUNCNAME $BASH_LINENO $LINENO   $BASH_COMMAND'  ERR
  echo "Procedure not yet implemented. I don't know what to do."
} # end _windows__32
